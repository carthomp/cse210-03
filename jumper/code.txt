director
from jumper.word import Word
from jumper.parachute import Parachute
from jumper.terminal_service import Terminal_Service

class Director():
    """
    """
    def __init__(self):
        """
        """
        self.keep_playing = True
        self.play_again = ""
        self.current_word = Word()
        self.current_parachute = Parachute()
        self.term_service = Terminal_Service()
        self.tries = 0
    
    def start_game(self):
        """
        """
        self.term_service.welcome()
        self.tries = self.current_parachute.get_tries()
        parachute = self.get_parachute(self.tries)
        self.term_service.display_parachute(parachute)
        #self.get_input()
        self.do_game_loop()
        self.end_game()
    
    def get_parachute (self,tries):
        parachute = self.current_parachute.draw(tries)
        return parachute

    def do_game_loop(self):
        """
        """
        while (self.keep_playing):
            guess = self.term_service.take_guess()
            self.current_word.pick_word()
            word = self.current_word.set_word()
            guess_status = self.term_service.compare_guess(word, guess)
            
                              
            print ()
            if guess_status:
                tries = self.current_parachute.get_tries()
                parachute = self.get_parachute(tries)
                self.term_service.display_parachute(parachute)   
            else:
                self.current_parachute.set_tries()
                tries = self.current_parachute.get_tries()
                parachute = self.get_parachute(tries)
                self.term_service.display_parachute(parachute)
 
            if self.end_game():
                break
    
    def end_game(self):
        """
        """
        if not self.keep_playing:
          print('Game over!')
          return True


word
import csv
import random

       
class Word:

    def _init_(self):
        
        self._word_list = []
        self._word = ""
               
    def set_word (self):
        return self._word

    def pick_word(self):
        with open ("jumper\words.csv") as csv_file:
            reader = csv.reader(csv_file)
            self._word_list = list(reader)
            for row in reader:
                self._word_list.append(row)

            random_word_number = random.randint(0,len(self._word_list))
            self._word = self._word_list[random_word_number]
